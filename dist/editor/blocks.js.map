{"version":3,"file":"./dist/editor/blocks.js","mappings":"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","sources":["webpack://travelopia-wordpress-blocks/./node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack://travelopia-wordpress-blocks/./node_modules/react/jsx-runtime.js","webpack://travelopia-wordpress-blocks/external window \"React\"","webpack://travelopia-wordpress-blocks/./node_modules/classnames/index.js","webpack://travelopia-wordpress-blocks/webpack/bootstrap","webpack://travelopia-wordpress-blocks/webpack/runtime/compat get default export","webpack://travelopia-wordpress-blocks/webpack/runtime/define property getters","webpack://travelopia-wordpress-blocks/webpack/runtime/hasOwnProperty shorthand","webpack://travelopia-wordpress-blocks/webpack/runtime/make namespace object","webpack://travelopia-wordpress-blocks/external window [\"wp\",\"blocks\"]","webpack://travelopia-wordpress-blocks/external window [\"wp\",\"primitives\"]","webpack://travelopia-wordpress-blocks/./node_modules/@wordpress/icons/build-module/library/block-table.js","webpack://travelopia-wordpress-blocks/external window [\"wp\",\"i18n\"]","webpack://travelopia-wordpress-blocks/external window [\"wp\",\"blockEditor\"]","webpack://travelopia-wordpress-blocks/external window [\"wp\",\"element\"]","webpack://travelopia-wordpress-blocks/external window [\"wp\",\"components\"]","webpack://travelopia-wordpress-blocks/external window [\"wp\",\"data\"]","webpack://travelopia-wordpress-blocks/./src/editor/blocks/table/placeholder.tsx","webpack://travelopia-wordpress-blocks/./src/editor/blocks/table/children/cell/index.ts","webpack://travelopia-wordpress-blocks/./src/editor/blocks/table/children/cell/edit.tsx","webpack://travelopia-wordpress-blocks/./src/editor/blocks/table/children/cell/save.tsx","webpack://travelopia-wordpress-blocks/./src/editor/blocks/table/children/column/index.ts","webpack://travelopia-wordpress-blocks/./src/editor/blocks/table/children/column/edit.tsx","webpack://travelopia-wordpress-blocks/./src/editor/blocks/table/children/column/save.tsx","webpack://travelopia-wordpress-blocks/./src/editor/blocks/table/children/row/index.ts","webpack://travelopia-wordpress-blocks/./src/editor/blocks/table/children/row/edit.tsx","webpack://travelopia-wordpress-blocks/./src/editor/blocks/table/children/row/save.tsx","webpack://travelopia-wordpress-blocks/./src/editor/blocks/table/children/row-container/index.ts","webpack://travelopia-wordpress-blocks/./src/editor/blocks/table/children/row-container/edit.tsx","webpack://travelopia-wordpress-blocks/./src/editor/blocks/table/children/row-container/save.tsx","webpack://travelopia-wordpress-blocks/./src/editor/blocks/table/edit.tsx","webpack://travelopia-wordpress-blocks/./src/editor/blocks/table/index.ts","webpack://travelopia-wordpress-blocks/./src/editor/blocks/table/save.tsx","webpack://travelopia-wordpress-blocks/external window [\"wp\",\"hooks\"]","webpack://travelopia-wordpress-blocks/./node_modules/@wordpress/icons/build-module/library/table-row-before.js","webpack://travelopia-wordpress-blocks/./node_modules/@wordpress/icons/build-module/library/table-row-after.js","webpack://travelopia-wordpress-blocks/./node_modules/@wordpress/icons/build-module/library/table-row-delete.js","webpack://travelopia-wordpress-blocks/./node_modules/@wordpress/icons/build-module/library/table-column-before.js","webpack://travelopia-wordpress-blocks/./node_modules/@wordpress/icons/build-module/library/table-column-after.js","webpack://travelopia-wordpress-blocks/./node_modules/@wordpress/icons/build-module/library/table-column-delete.js","webpack://travelopia-wordpress-blocks/./node_modules/@wordpress/icons/build-module/library/arrow-left.js","webpack://travelopia-wordpress-blocks/./node_modules/@wordpress/icons/build-module/library/arrow-right.js","webpack://travelopia-wordpress-blocks/./node_modules/@wordpress/icons/build-module/library/arrow-up.js","webpack://travelopia-wordpress-blocks/./node_modules/@wordpress/icons/build-module/library/arrow-down.js","webpack://travelopia-wordpress-blocks/./node_modules/@wordpress/icons/build-module/library/table.js","webpack://travelopia-wordpress-blocks/./src/editor/blocks/toolbar.tsx","webpack://travelopia-wordpress-blocks/./src/editor/blocks/block-toolbar.tsx","webpack://travelopia-wordpress-blocks/./src/editor/blocks/index.ts"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","module.exports = window[\"React\"];","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"primitives\"];","import { createElement } from \"react\";\n/**\n * WordPress dependencies\n */\nimport { Path, SVG } from '@wordpress/primitives';\nconst blockTable = createElement(SVG, {\n  viewBox: \"0 0 24 24\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, createElement(Path, {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM5 4.5h14c.3 0 .5.2.5.5v3.5h-15V5c0-.3.2-.5.5-.5zm8 5.5h6.5v3.5H13V10zm-1.5 3.5h-7V10h7v3.5zm-7 5.5v-4h7v4.5H5c-.3 0-.5-.2-.5-.5zm14.5.5h-6V15h6.5v4c0 .3-.2.5-.5.5z\"\n}));\nexport default blockTable;\n//# sourceMappingURL=block-table.js.map","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","/**\n * WordPress dependencies.\n */\nimport { __ } from '@wordpress/i18n';\nimport { BlockIcon } from '@wordpress/block-editor';\nimport { blockTable as icon } from '@wordpress/icons';\nimport {\n\tButton,\n\tTextControl,\n\tPlaceholder,\n} from '@wordpress/components';\nimport { useState } from '@wordpress/element';\nimport {\n\tBlockEditProps,\n} from '@wordpress/blocks';\n\n/**\n * Internal dependencies.\n */\nimport { createAndInsertRowContainer } from './edit';\n\n/**\n * Edit function.\n *\n * @param {Object} props Edit properties.\n *\n * @return {JSX.Element} JSX Component.\n */\nexport function TablePlaceholder( props: BlockEditProps<any> ): JSX.Element {\n\t// Destructure properties.\n\tconst { setAttributes, clientId } = props;\n\tconst [ rows, setRows ] = useState( 2 );\n\tconst [ columns, setColumns ] = useState( 2 );\n\n\t// Return placeholder.\n\treturn (\n\t\t<Placeholder\n\t\t\tlabel={ __( 'Table', 'tp' ) }\n\t\t\ticon={ <BlockIcon icon={ icon } showColors /> }\n\t\t\tinstructions={ __( 'Insert a table for sharing data.', 'tp' ) }\n\t\t>\n\t\t\t<form\n\t\t\t\tclassName=\"travelopia-table__placeholder-form\"\n\t\t\t\tonSubmit={ ( e ) => {\n\t\t\t\t\t// Prevent form submission.\n\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t// Set attributes.\n\t\t\t\t\tsetAttributes( { rows, columns } );\n\n\t\t\t\t\t// Create and insert row container.\n\t\t\t\t\tcreateAndInsertRowContainer( 'tbody', clientId );\n\t\t\t\t} }\n\t\t\t>\n\t\t\t\t<TextControl\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tlabel={ __( 'Column count', 'tp' ) }\n\t\t\t\t\tvalue={ columns }\n\t\t\t\t\tonChange={ ( totalColumns: string ) => setColumns( parseInt( totalColumns ) ) }\n\t\t\t\t\tmin=\"1\"\n\t\t\t\t\tclassName=\"travelopia-table__placeholder-input\"\n\t\t\t\t/>\n\t\t\t\t<TextControl\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tlabel={ __( 'Row count', 'tp' ) }\n\t\t\t\t\tvalue={ rows }\n\t\t\t\t\tonChange={ ( totalRows: string ) => setRows( parseInt( totalRows ) ) }\n\t\t\t\t\tmin=\"1\"\n\t\t\t\t\tclassName=\"travelopia-table__placeholder-input\"\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t>\n\t\t\t\t\t{ __( 'Create Table', 'tp' ) }\n\t\t\t\t</Button>\n\t\t\t</form>\n\t\t</Placeholder>\n\t);\n}\n","/**\n * WordPress dependencies.\n */\nimport { __ } from '@wordpress/i18n';\nimport { BlockConfiguration } from '@wordpress/blocks';\nimport { blockTable as icon } from '@wordpress/icons';\n\n/**\n * Internal dependencies.\n */\nimport metadata from './block.json';\nimport edit from './edit';\nimport save from './save';\n\n/**\n * Block name.\n */\nexport const { name }: { name: string } = metadata;\n\n/**\n * Block configuration settings.\n */\nexport const settings: BlockConfiguration = {\n\t...metadata,\n\ticon,\n\tedit,\n\tsave,\n};\n","/**\n * WordPress dependencies.\n */\nimport { __ } from '@wordpress/i18n';\nimport { BlockEditProps } from '@wordpress/blocks';\nimport {\n\tRichText,\n\tuseBlockProps,\n} from '@wordpress/block-editor';\n\n/**\n * Edit function.\n *\n * @param {Object} props Edit properties.\n *\n * @return {JSX.Element} JSX Component.\n */\nexport default function Edit( props: BlockEditProps<any> ): JSX.Element {\n\t// Destructure properties.\n\tconst { attributes, setAttributes } = props;\n\tconst blockProps = useBlockProps( {\n\t\tclassName: 'travelopia-table__cell',\n\t} );\n\n\t// Return cell content.\n\treturn (\n\t\t<RichText\n\t\t\ttagName=\"span\"\n\t\t\t{ ...blockProps }\n\t\t\tplaceholder={ __( 'Cell content', 'tp' ) }\n\t\t\tonChange={ ( content: string ) => setAttributes( { content } ) }\n\t\t\tvalue={ attributes.content }\n\t\t/>\n\t);\n}\n","/**\n * WordPress dependencies.\n */\nimport { RichText } from '@wordpress/block-editor';\nimport { BlockSaveProps } from '@wordpress/blocks';\n\n/**\n * Save component.\n *\n * @param {Object} props            Component properties.\n * @param {Object} props.attributes Component attributes.\n */\nexport default function Save( {\n\tattributes,\n}: BlockSaveProps<Record<string, any>> ) {\n\t// Save content.\n\treturn <RichText.Content value={ attributes.content } />;\n}\n","/**\n * WordPress dependencies.\n */\nimport { __ } from '@wordpress/i18n';\nimport { BlockConfiguration } from '@wordpress/blocks';\nimport { blockTable as icon } from '@wordpress/icons';\n\n/**\n * Internal dependencies.\n */\nimport metadata from './block.json';\nimport edit from './edit';\nimport save from './save';\n\n/**\n * Block name.\n */\nexport const { name }: { name: string } = metadata;\n\n// @ts-ignore Ignore BlockConfiguration type error for providesContext.\nexport const settings: BlockConfiguration = {\n\t...metadata,\n\ticon,\n\tedit,\n\tsave,\n};\n","/**\n * WordPress dependencies.\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n\tuseBlockProps,\n\tuseInnerBlocksProps,\n\tstore as blockEditorStore,\n\tInspectorControls,\n} from '@wordpress/block-editor';\nimport { useEffect } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport { BlockEditProps } from '@wordpress/blocks';\nimport { PanelBody, ToggleControl } from '@wordpress/components';\n\n/**\n * External dependencies.\n */\nimport classnames from 'classnames';\n\n/**\n * Internal dependencies.\n */\nimport { name as cellBlockName } from '../cell';\n\n/**\n * Edit function.\n *\n * @param {Object}   props               Edit properties.\n * @param {string}   props.className     Class name.\n * @param {string}   props.clientId      Client ID.\n * @param {Object}   props.attributes    Attributes.\n * @param {Function} props.setAttributes Set attributes.\n * @param {Object}   props.context       Block context.\n *\n * @return {JSX.Element} JSX Component.\n */\nexport default function Edit( {\n\tclassName,\n\tclientId,\n\tattributes,\n\tsetAttributes,\n\tcontext,\n}: BlockEditProps<any> ): JSX.Element {\n\t// Get block props.\n\tconst blockProps = useBlockProps( {\n\t\tclassName: classnames( className, 'travelopia-table__column', {\n\t\t\t'travelopia-table__column--sticky': attributes.isSticky,\n\t\t} ),\n\t} );\n\n\t// Get context.\n\tconst rowContainerType: string = context[ 'travelopia/table-row-container-type' ] as string;\n\n\t// Get inner blocks props.\n\tconst innerBlocksProps = useInnerBlocksProps(\n\t\t{\n\t\t\t...blockProps,\n\t\t\tcolSpan: attributes.colSpan,\n\t\t\trowSpan: attributes.rowSpan,\n\t\t},\n\t\t{\n\t\t\ttemplate: [ [ cellBlockName ] ],\n\t\t\ttemplateLock: false,\n\t\t},\n\t);\n\n\t// Get the row and column index.\n\tconst { row, column } = useSelect(\n\t\t( select: any ) => {\n\t\t\t// Calculate the row and column index.\n\t\t\tconst columnIndex = select( blockEditorStore ).getBlockIndex( clientId );\n\t\t\tconst rowClientId =\n\t\t\t\tselect( blockEditorStore ).getBlockRootClientId( clientId );\n\t\t\tconst rowIndex = select( blockEditorStore ).getBlockIndex( rowClientId );\n\n\t\t\t// Return the row and column index.\n\t\t\treturn {\n\t\t\t\trow: rowIndex + 1, // Start index at 1.\n\t\t\t\tcolumn: columnIndex + 1,\n\t\t\t};\n\t\t},\n\t\t[ clientId ],\n\t);\n\n\t// Update the row and column index.\n\tuseEffect( () => {\n\t\t// Set the row and column index.\n\t\tsetAttributes( { row, column } );\n\t}, [ row, column, setAttributes ] );\n\n\t// Set the block ID.\n\tuseEffect( () => {\n\t\t// Set the block ID.\n\t\tsetAttributes( { blockId: clientId } );\n\t}, [ clientId, setAttributes ] );\n\n\t// Determine tag.\n\tlet Tag: string = 'td';\n\n\t// Check if the row container type is not tbody.\n\tif ( 'tbody' !== rowContainerType ) {\n\t\tTag = 'th';\n\t}\n\n\t// Return the column block.\n\treturn (\n\t\t<>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={ __( 'Column Options', 'tp' ) }>\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tlabel={ __( 'Is Sticky', 'tp' ) }\n\t\t\t\t\t\tchecked={ attributes.isSticky }\n\t\t\t\t\t\tonChange={ ( isSticky: boolean ) => setAttributes( { isSticky } ) }\n\t\t\t\t\t\thelp={ __( 'Is this column sticky?', 'tp' ) }\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t\t<Tag\n\t\t\t\t{ ...innerBlocksProps }\n\t\t\t/>\n\t\t</>\n\t);\n}\n","/**\n * WordPress dependencies.\n */\nimport { InnerBlocks } from '@wordpress/block-editor';\n\n/**\n * Save component.\n */\nexport default function Save() {\n\t// Save inner content.\n\treturn <InnerBlocks.Content />;\n}\n","/**\n * WordPress dependencies.\n */\nimport { __ } from '@wordpress/i18n';\nimport { BlockConfiguration } from '@wordpress/blocks';\nimport { blockTable as icon } from '@wordpress/icons';\n\n/**\n * Internal dependencies.\n */\nimport metadata from './block.json';\nimport edit from './edit';\nimport save from './save';\n\n/**\n * Block name.\n */\nexport const { name }: { name: string } = metadata;\n\n/**\n * Block settings.\n */\nexport const settings: BlockConfiguration = {\n\t...metadata,\n\ticon,\n\tedit,\n\tsave,\n};\n","/**\n * WordPress dependencies.\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n\tuseBlockProps,\n\tuseInnerBlocksProps,\n} from '@wordpress/block-editor';\nimport {\n\tBlockEditProps,\n} from '@wordpress/blocks';\n\n/**\n * External dependencies.\n */\nimport classnames from 'classnames';\n\n/**\n * Internal dependencies.\n */\nimport { name as columnBlockName } from '../column';\nimport { useEffect } from '@wordpress/element';\n\n/**\n * Edit function.\n *\n * @param {Object} props Edit properties.\n *\n * @return {JSX.Element} JSX Component.\n */\nexport default function Edit( props: BlockEditProps<any> ): JSX.Element {\n\t// Block props.\n\tconst { className, clientId, setAttributes } = props;\n\n\t// Inner block props.\n\tconst blockProps = useBlockProps( {\n\t\tclassName: classnames( className, 'travelopia-table__row' ),\n\t} );\n\tconst innerBlocksProps = useInnerBlocksProps( { ...blockProps }, {\n\t\tallowedBlocks: [ columnBlockName ],\n\t\ttemplateLock: false,\n\t} );\n\n\t// Set block id.\n\tuseEffect( () => {\n\t\t// Set block attributes.\n\t\tsetAttributes( { blockId: clientId } );\n\t}, [ clientId, setAttributes ] );\n\n\t// Return inner blocks.\n\treturn (\n\t\t<tr { ...innerBlocksProps } />\n\t);\n}\n","/**\n * WordPress dependencies.\n */\nimport { InnerBlocks } from '@wordpress/block-editor';\n\n/**\n * Save component.\n */\nexport default function Save() {\n\t// Save inner content.\n\treturn <InnerBlocks.Content />;\n}\n","/**\n * WordPress dependencies.\n */\nimport { __ } from '@wordpress/i18n';\nimport { BlockConfiguration } from '@wordpress/blocks';\nimport { blockTable as icon } from '@wordpress/icons';\n\n/**\n * Internal dependencies.\n */\nimport metadata from './block.json';\nimport edit from './edit';\nimport save from './save';\n\n/**\n * Block name.\n */\nexport const { name }: { name: string } = metadata;\n\n// @ts-ignore Ignore BlockConfiguration type error for providesContext.\nexport const settings: BlockConfiguration = {\n\t...metadata,\n\ticon,\n\tedit,\n\tsave,\n};\n","/**\n * WordPress dependencies.\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n\tInspectorControls,\n\tuseBlockProps,\n\tuseInnerBlocksProps,\n} from '@wordpress/block-editor';\nimport {\n\tPanelBody,\n\tToggleControl,\n} from '@wordpress/components';\nimport {\n\tBlockEditProps,\n} from '@wordpress/blocks';\n\n/**\n * External dependencies.\n */\nimport classnames from 'classnames';\n\n/**\n * Internal dependencies.\n */\nimport { name as rowBlockName } from '../row';\nimport { useEffect } from '@wordpress/element';\n\n/**\n * Edit function.\n *\n * @param {Object} props Edit properties.\n *\n * @return {JSX.Element} JSX Component.\n */\nexport default function Edit( props: BlockEditProps<any> ): JSX.Element {\n\t// Block props.\n\tconst { className, attributes, setAttributes, clientId } = props;\n\n\t// Inner block props.\n\tconst blockProps = useBlockProps( {\n\t\tclassName: classnames( className, 'travelopia-table__row-container', {\n\t\t\t'travelopia-table__row-container--sticky': attributes.isSticky,\n\t\t} ),\n\t} );\n\tconst innerBlocksProps = useInnerBlocksProps( { ...blockProps }, {\n\t\tallowedBlocks: [ rowBlockName ],\n\t} );\n\n\t// Determine tag.\n\tconst Tag: string = attributes.type;\n\n\t// Set block id.\n\tuseEffect( () => {\n\t\t// Set block attributes.\n\t\tsetAttributes( { blockId: clientId } );\n\t}, [ clientId, setAttributes ] );\n\n\t// Return component.\n\treturn (\n\t\t<>\n\t\t\t{ 'thead' === attributes.type &&\n\t\t\t\t<InspectorControls>\n\t\t\t\t\t<PanelBody title={ __( 'Row Container Options', 'tp' ) }>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={ __( 'Is Sticky vertically', 'tp' ) }\n\t\t\t\t\t\t\tchecked={ attributes.isSticky }\n\t\t\t\t\t\t\tonChange={ ( isSticky: boolean ) => setAttributes( { isSticky } ) }\n\t\t\t\t\t\t\thelp={ __( 'Is this container sticky?', 'tp' ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</InspectorControls>\n\t\t\t}\n\t\t\t<Tag { ...innerBlocksProps } />\n\t\t</>\n\t);\n}\n","/**\n * WordPress dependencies.\n */\nimport { InnerBlocks } from '@wordpress/block-editor';\n\n/**\n * Save component.\n */\nexport default function Save() {\n\t// Save inner content.\n\treturn <InnerBlocks.Content />;\n}\n","/**\n * WordPress dependencies.\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n\tInspectorControls,\n\tuseBlockProps,\n\tuseInnerBlocksProps,\n} from '@wordpress/block-editor';\nimport { BlockEditProps, createBlock } from '@wordpress/blocks';\nimport { useEffect } from '@wordpress/element';\nimport { PanelBody, ToggleControl } from '@wordpress/components';\nimport { select, dispatch } from '@wordpress/data';\n\n/**\n * External dependencies.\n */\nimport classnames from 'classnames';\n\n/**\n * Internal dependencies.\n */\nimport { TablePlaceholder } from './placeholder';\nimport { name as rowContainerBlockName } from './children/row-container';\nimport { name as rowBlockName } from './children/row';\nimport { name as columnBlockName } from './children/column';\nimport { name as cellBlockName } from './children/cell';\n\n/**\n * Create and insert a row container.\n *\n * @param {string} type          Row container type.\n * @param {string} tableClientId The table block's client ID.\n */\nexport const createAndInsertRowContainer = (\n\ttype: string = 'tbody',\n\ttableClientId: string = '',\n): void => {\n\t// Get table block.\n\tconst tableBlock = select( 'core/block-editor' ).getBlock( tableClientId );\n\n\t// Return if table block is not found.\n\tif ( ! tableBlock ) {\n\t\t// Exit early.\n\t\treturn;\n\t}\n\n\t// Create row container.\n\tconst rowContainerBlock = createBlock( rowContainerBlockName, { type } );\n\n\t// Determine number of rows to create.\n\tlet totalRows = tableBlock.attributes.rows;\n\n\t// Check if the type is not tbody.\n\tif ( 'tbody' !== type ) {\n\t\ttotalRows = 1;\n\t}\n\n\t// Add rows and columns to it.\n\tfor ( let i: number = 0; i < totalRows; i++ ) {\n\t\tconst columnBlocks = [];\n\n\t\t// Loop through columns.\n\t\tfor ( let j: number = 0; j < tableBlock.attributes.columns; j++ ) {\n\t\t\tcolumnBlocks.push(\n\t\t\t\tcreateBlock( columnBlockName, {}, [ createBlock( cellBlockName ) ] ),\n\t\t\t);\n\t\t}\n\n\t\t// Create row block.\n\t\trowContainerBlock.innerBlocks.push(\n\t\t\tcreateBlock( rowBlockName, {}, columnBlocks ),\n\t\t);\n\t}\n\n\t// Add newly created row and column blocks to the table.\n\tif ( 'tbody' === type ) {\n\t\tdispatch( 'core/block-editor' ).replaceInnerBlocks( tableClientId, [\n\t\t\trowContainerBlock,\n\t\t] );\n\t} else {\n\t\tconst position = 'thead' === type ? 0 : tableBlock.innerBlocks.length;\n\t\tdispatch( 'core/block-editor' ).insertBlock(\n\t\t\trowContainerBlock,\n\t\t\tposition,\n\t\t\ttableClientId,\n\t\t);\n\t}\n};\n\n/**\n * Delete row container child block.\n *\n * @param {string} type          Row container type.\n * @param {string} tableClientId The table block's client ID.\n */\nexport const deleteRowContainer = (\n\ttype: string = 'thead',\n\ttableClientId: string = '',\n): void => {\n\t// Get table block.\n\tconst tableBlock = select( 'core/block-editor' ).getBlock( tableClientId );\n\n\t// Return if table block is not found.\n\tif ( ! tableBlock || ! tableBlock.innerBlocks.length ) {\n\t\t// Exit early.\n\t\treturn;\n\t}\n\n\t// Find the child block and delete it.\n\ttableBlock.innerBlocks.forEach( ( innerBlock ) => {\n\t\t// Check if the block type matches.\n\t\tif ( innerBlock.attributes?.type === type ) {\n\t\t\tdispatch( 'core/block-editor' ).removeBlock( innerBlock.clientId );\n\t\t}\n\t} );\n};\n\n/**\n * Edit function.\n *\n * @param {Object} props Edit properties.\n *\n * @return {JSX.Element} JSX Component.\n */\nexport default function Edit( props: BlockEditProps<any> ): JSX.Element {\n\t// Destructure properties.\n\tconst { className, attributes, clientId, setAttributes } = props;\n\tconst blockProps = useBlockProps( {\n\t\tclassName: classnames( className, 'travelopia-table' ),\n\t} );\n\tconst innerBlocksProps = useInnerBlocksProps(\n\t\t{},\n\t\t{\n\t\t\tallowedBlocks: [ rowContainerBlockName ],\n\t\t\trenderAppender: undefined,\n\t\t},\n\t);\n\n\t// Set blockId attribute.\n\tuseEffect( () => {\n\t\t// Set blockId attribute.\n\t\tsetAttributes( { blockId: clientId } );\n\t}, [ clientId, setAttributes ] );\n\n\t/**\n\t * Handle THEAD change.\n\t *\n\t * @param {boolean} hasThead Has THEAD.\n\t */\n\tconst handleTheadChange = ( hasThead: boolean ): void => {\n\t\t// Create or delete THEAD row container.\n\t\tif ( hasThead ) {\n\t\t\tcreateAndInsertRowContainer( 'thead', clientId );\n\t\t} else {\n\t\t\tdeleteRowContainer( 'thead', clientId );\n\t\t}\n\t\tsetAttributes( { hasThead } );\n\t};\n\n\t/**\n\t * Handle TFOOT change.\n\t *\n\t * @param {boolean} hasTfoot Has TFOOT.\n\t */\n\tconst handleTfootChange = ( hasTfoot: boolean ): void => {\n\t\t// Create or delete TFOOT row container.\n\t\tif ( hasTfoot ) {\n\t\t\tcreateAndInsertRowContainer( 'tfoot', clientId );\n\t\t} else {\n\t\t\tdeleteRowContainer( 'tfoot', clientId );\n\t\t}\n\t\tsetAttributes( { hasTfoot } );\n\t};\n\n\t// Return the component.\n\treturn (\n\t\t<>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={ __( 'Table Options', 'tp' ) }>\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tlabel={ __( 'Has THEAD', 'tp' ) }\n\t\t\t\t\t\tchecked={ attributes.hasThead }\n\t\t\t\t\t\tonChange={ handleTheadChange }\n\t\t\t\t\t\thelp={ __( 'Does this table have a header?', 'tp' ) }\n\t\t\t\t\t/>\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tlabel={ __( 'Has TFOOT', 'tp' ) }\n\t\t\t\t\t\tchecked={ attributes.hasTfoot }\n\t\t\t\t\t\tonChange={ handleTfootChange }\n\t\t\t\t\t\thelp={ __( 'Does this table have a footer?', 'tp' ) }\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t\t<figure { ...blockProps }>\n\t\t\t\t{\n\t\t\t\t\t/* Placeholder for initial state. */\n\t\t\t\t\t( 0 === attributes.rows || 0 === attributes.columns ) && (\n\t\t\t\t\t\t<TablePlaceholder { ...props } />\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\t{ ( 0 !== attributes.rows || 0 !== attributes.columns ) && (\n\t\t\t\t\t<table { ...innerBlocksProps } />\n\t\t\t\t) }\n\t\t\t</figure>\n\t\t</>\n\t);\n}\n","/**\n * WordPress dependencies.\n */\nimport { __ } from '@wordpress/i18n';\nimport { BlockConfiguration, registerBlockType } from '@wordpress/blocks';\nimport { blockTable as icon } from '@wordpress/icons';\n\n/**\n * Internal dependencies.\n */\nimport metadata from './block.json';\nimport edit from './edit';\nimport save from './save';\n\n/**\n * Block name.\n */\nexport const { name }: { name: string } = metadata;\n\n/**\n * Styles.\n */\nimport '../../../front-end/table/index.scss';\nimport './editor.scss';\n\n// @ts-ignore Ignore BlockConfiguration type error for providesContext.\nexport const settings: BlockConfiguration = {\n\t...metadata,\n\ticon,\n\tedit,\n\tsave,\n};\n\n/**\n * Children blocks.\n */\nimport * as row from './children/row';\nimport * as rowContainer from './children/row-container';\nimport * as column from './children/column';\nimport * as cell from './children/cell';\n\n/**\n * Initialization.\n */\nexport const init = (): void => {\n\t// Register block.\n\tregisterBlockType( name, settings );\n\n\t// Register children blocks.\n\tregisterBlockType( row.name, row.settings );\n\tregisterBlockType( rowContainer.name, rowContainer.settings );\n\tregisterBlockType( column.name, column.settings );\n\tregisterBlockType( cell.name, cell.settings );\n};\n","/**\n * WordPress dependencies.\n */\nimport { InnerBlocks } from '@wordpress/block-editor';\n\n/**\n * Save component.\n */\nexport default function Save() {\n\t// Save inner content.\n\treturn <InnerBlocks.Content />;\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"hooks\"];","import { createElement } from \"react\";\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst tableRowBefore = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"-2 -2 24 24\"\n}, createElement(Path, {\n  d: \"M6.656 6.464h2.88v2.88h1.408v-2.88h2.88V5.12h-2.88V2.24H9.536v2.88h-2.88zM0 17.92V0h20.48v17.92H0zm7.68-2.56h5.12v-3.84H7.68v3.84zm-6.4 0H6.4v-3.84H1.28v3.84zM19.2 1.28H1.28v9.024H19.2V1.28zm0 10.24h-5.12v3.84h5.12v-3.84zM6.656 6.464h2.88v2.88h1.408v-2.88h2.88V5.12h-2.88V2.24H9.536v2.88h-2.88zM0 17.92V0h20.48v17.92H0zm7.68-2.56h5.12v-3.84H7.68v3.84zm-6.4 0H6.4v-3.84H1.28v3.84zM19.2 1.28H1.28v9.024H19.2V1.28zm0 10.24h-5.12v3.84h5.12v-3.84z\"\n}));\nexport default tableRowBefore;\n//# sourceMappingURL=table-row-before.js.map","import { createElement } from \"react\";\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst tableRowAfter = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"-2 -2 24 24\"\n}, createElement(Path, {\n  d: \"M13.824 10.176h-2.88v-2.88H9.536v2.88h-2.88v1.344h2.88v2.88h1.408v-2.88h2.88zM0 17.92V0h20.48v17.92H0zM6.4 1.28H1.28v3.84H6.4V1.28zm6.4 0H7.68v3.84h5.12V1.28zm6.4 0h-5.12v3.84h5.12V1.28zm0 5.056H1.28v9.024H19.2V6.336z\"\n}));\nexport default tableRowAfter;\n//# sourceMappingURL=table-row-after.js.map","import { createElement } from \"react\";\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst tableRowDelete = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"-2 -2 24 24\"\n}, createElement(Path, {\n  d: \"M17.728 11.456L14.592 8.32l3.2-3.2-1.536-1.536-3.2 3.2L9.92 3.648 8.384 5.12l3.2 3.2-3.264 3.264 1.536 1.536 3.264-3.264 3.136 3.136 1.472-1.536zM0 17.92V0h20.48v17.92H0zm19.2-6.4h-.448l-1.28-1.28H19.2V6.4h-1.792l1.28-1.28h.512V1.28H1.28v3.84h6.208l1.28 1.28H1.28v3.84h7.424l-1.28 1.28H1.28v3.84H19.2v-3.84z\"\n}));\nexport default tableRowDelete;\n//# sourceMappingURL=table-row-delete.js.map","import { createElement } from \"react\";\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst tableColumnBefore = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"-2 -2 24 24\"\n}, createElement(Path, {\n  d: \"M6.4 3.776v3.648H2.752v1.792H6.4v3.648h1.728V9.216h3.712V7.424H8.128V3.776zM0 17.92V0h20.48v17.92H0zM12.8 1.28H1.28v14.08H12.8V1.28zm6.4 0h-5.12v3.84h5.12V1.28zm0 5.12h-5.12v3.84h5.12V6.4zm0 5.12h-5.12v3.84h5.12v-3.84z\"\n}));\nexport default tableColumnBefore;\n//# sourceMappingURL=table-column-before.js.map","import { createElement } from \"react\";\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst tableColumnAfter = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"-2 -2 24 24\"\n}, createElement(Path, {\n  d: \"M14.08 12.864V9.216h3.648V7.424H14.08V3.776h-1.728v3.648H8.64v1.792h3.712v3.648zM0 17.92V0h20.48v17.92H0zM6.4 1.28H1.28v3.84H6.4V1.28zm0 5.12H1.28v3.84H6.4V6.4zm0 5.12H1.28v3.84H6.4v-3.84zM19.2 1.28H7.68v14.08H19.2V1.28z\"\n}));\nexport default tableColumnAfter;\n//# sourceMappingURL=table-column-after.js.map","import { createElement } from \"react\";\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst tableColumnDelete = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"-2 -2 24 24\"\n}, createElement(Path, {\n  d: \"M6.4 9.98L7.68 8.7v-.256L6.4 7.164V9.98zm6.4-1.532l1.28-1.28V9.92L12.8 8.64v-.192zm7.68 9.472V0H0v17.92h20.48zm-1.28-2.56h-5.12v-1.024l-.256.256-1.024-1.024v1.792H7.68v-1.792l-1.024 1.024-.256-.256v1.024H1.28V1.28H6.4v2.368l.704-.704.576.576V1.216h5.12V3.52l.96-.96.32.32V1.216h5.12V15.36zm-5.76-2.112l-3.136-3.136-3.264 3.264-1.536-1.536 3.264-3.264L5.632 5.44l1.536-1.536 3.136 3.136 3.2-3.2 1.536 1.536-3.2 3.2 3.136 3.136-1.536 1.536z\"\n}));\nexport default tableColumnDelete;\n//# sourceMappingURL=table-column-delete.js.map","import { createElement } from \"react\";\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst arrowLeft = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, createElement(Path, {\n  d: \"M20 11.2H6.8l3.7-3.7-1-1L3.9 12l5.6 5.5 1-1-3.7-3.7H20z\"\n}));\nexport default arrowLeft;\n//# sourceMappingURL=arrow-left.js.map","import { createElement } from \"react\";\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst arrowRight = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, createElement(Path, {\n  d: \"m14.5 6.5-1 1 3.7 3.7H4v1.6h13.2l-3.7 3.7 1 1 5.6-5.5z\"\n}));\nexport default arrowRight;\n//# sourceMappingURL=arrow-right.js.map","import { createElement } from \"react\";\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst arrowUp = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, createElement(Path, {\n  d: \"M12 3.9 6.5 9.5l1 1 3.8-3.7V20h1.5V6.8l3.7 3.7 1-1z\"\n}));\nexport default arrowUp;\n//# sourceMappingURL=arrow-up.js.map","import { createElement } from \"react\";\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst arrowDown = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, createElement(Path, {\n  d: \"m16.5 13.5-3.7 3.7V4h-1.5v13.2l-3.8-3.7-1 1 5.5 5.6 5.5-5.6z\"\n}));\nexport default arrowDown;\n//# sourceMappingURL=arrow-down.js.map","import { createElement } from \"react\";\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst table = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, createElement(Path, {\n  d: \"M4 6v11.5h16V6H4zm1.5 1.5h6V11h-6V7.5zm0 8.5v-3.5h6V16h-6zm13 0H13v-3.5h5.5V16zM13 11V7.5h5.5V11H13z\"\n}));\nexport default table;\n//# sourceMappingURL=table.js.map","/**\n * WordPress dependencies.\n */\nimport { __ } from '@wordpress/i18n';\nimport { BlockInstance, createBlock } from '@wordpress/blocks';\nimport { BlockControls } from '@wordpress/block-editor';\nimport { ToolbarDropdownMenu } from '@wordpress/components';\nimport { select, dispatch } from '@wordpress/data';\nimport { DropdownOption } from '@wordpress/components/build-types/dropdown-menu/types';\nimport {\n\tarrowLeft,\n\tarrowRight,\n\tarrowUp,\n\tarrowDown,\n\ttableColumnAfter,\n\ttableColumnBefore,\n\ttableColumnDelete,\n\ttableRowAfter,\n\ttableRowBefore,\n\ttableRowDelete,\n\ttable,\n} from '@wordpress/icons';\nimport { useState, useEffect, useMemo } from '@wordpress/element';\n\n/**\n * Internal dependencies.\n */\nimport { name as columnBlockName } from './table/children/column';\nimport { name as rowBlockName } from './table/children/row';\nimport { name as cellBlockName } from './table/children/cell';\nimport { name as rowContainerBlockName } from './table/children/row-container';\n\n/**\n * Column block toolbar.\n *\n * @param {Object}  props                Block properties.\n * @param {boolean} props.isSelected     Is block selected.\n * @param {string}  props.tableId        Table block ID.\n * @param {number}  props.tableRow       Table row index.\n * @param {number}  props.tableColumn    Table column index.\n * @param {string}  props.rowContainerId Table row container ID.\n * @param {string}  props.columnId       Column block ID.\n *\n * @return {JSX.Element} JSX Component.\n */\nexport default function Toolbar( {\n\tisSelected,\n\ttableId,\n\ttableRow,\n\ttableColumn,\n\trowContainerId,\n\tcolumnId,\n}: {\n\tisSelected: boolean;\n\ttableId: string;\n\ttableRow: number;\n\ttableColumn: number;\n\trowContainerId: string;\n\tcolumnId: string;\n} ): JSX.Element {\n\t// Get block editor select and dispatch.\n\tconst {\n\t\tgetBlock,\n\t\tcanInsertBlockType,\n\t\tgetBlockAttributes,\n\t\tgetAdjacentBlockClientId,\n\n\t\t// @ts-ignore - Property 'canRemoveBlock' does not exist on type 'Store'.\n\t\tcanRemoveBlock,\n\t} = select( 'core/block-editor' );\n\n\t// Get block editor dispatch.\n\tconst {\n\t\tremoveBlock,\n\t\tremoveBlocks,\n\t\tinsertBlock,\n\t\tupdateBlockAttributes,\n\n\t\t// @ts-ignore - Property 'moveBlocksToPosition' does not exist on type 'Store'.\n\t\tmoveBlocksToPosition,\n\t} = dispatch( 'core/block-editor' );\n\n\t// State variables.\n\tconst [ maximumColumnsInCurrentRow, setMaximumColumnsInCurrentRow ] =\n\t\tuseState( 0 );\n\tconst [ maximumRowsInCurrentColumn, setMaximumRowsInCurrentColumn ] =\n\t\tuseState( 0 );\n\n\t// Get row container block type.\n\tconst rowContainerBlockType = useMemo(\n\t\t() => getBlock( rowContainerId )?.attributes?.type,\n\t\t[ rowContainerId, getBlock ],\n\t);\n\n\t/**\n\t * Set maximum columns in current row.\n\t */\n\tuseEffect( (): void => {\n\t\t// Get table block.\n\t\tconst tableBlock = getBlock( tableId );\n\n\t\t// Check if we have a block.\n\t\tif ( ! tableBlock ) {\n\t\t\tsetMaximumColumnsInCurrentRow( 0 );\n\n\t\t\t// Exit early.\n\t\t\treturn;\n\t\t}\n\n\t\t// Traverse table.\n\t\ttableBlock.innerBlocks.some( ( rowContainerBlock ): boolean => {\n\t\t\t// Check if the block is a row container.\n\t\t\tif (\n\t\t\t\trowContainerBlock.name !== rowContainerBlockName ||\n\t\t\t\t! rowContainerBlock.innerBlocks.length\n\t\t\t) {\n\t\t\t\t// Continue loop.\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Traverse row container.\n\t\t\tlet maxRows = 0;\n\t\t\trowContainerBlock.innerBlocks.forEach( ( rowBlock, rowIndex ) => {\n\t\t\t\t// Check if the block is a row.\n\t\t\t\tif ( rowBlock.name !== rowBlockName || ! rowBlock.innerBlocks.length ) {\n\t\t\t\t\t// Continue loop.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Set maximum columns in current row.\n\t\t\t\tif ( rowIndex + 1 === tableRow ) {\n\t\t\t\t\tsetMaximumColumnsInCurrentRow( rowBlock.innerBlocks.length );\n\t\t\t\t}\n\n\t\t\t\t// Set maximum rows in current column.\n\t\t\t\trowBlock.innerBlocks.forEach( ( columnBlock, columnIndex ) => {\n\t\t\t\t\t// Check if the block is a column.\n\t\t\t\t\tif (\n\t\t\t\t\t\tcolumnBlock.name !== columnBlockName ||\n\t\t\t\t\t\tcolumnIndex + 1 !== tableColumn\n\t\t\t\t\t) {\n\t\t\t\t\t\t// Continue loop.\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Increment maximum rows.\n\t\t\t\t\tmaxRows++;\n\t\t\t\t} );\n\t\t\t} );\n\n\t\t\t// Set maximum rows in current column.\n\t\t\tsetMaximumRowsInCurrentColumn( maxRows );\n\n\t\t\t// Short-circuit loop.\n\t\t\treturn true;\n\t\t} );\n\t}, [ tableRow, tableColumn, getBlock, tableId ] );\n\n\t/**\n\t * Insert row.\n\t *\n\t * @param {0|-1} insertionIndex Insertion index. -1 for before and 0 for after.\n\t */\n\tconst onInsertRow = ( insertionIndex: 0 | -1 = 0 ) => {\n\t\t// Get table block.\n\t\tconst tableBlock = getBlock( tableId );\n\n\t\t// Check if the table block exists.\n\t\tif ( ! tableBlock ) {\n\t\t\t// Exit early.\n\t\t\treturn;\n\t\t}\n\n\t\t// Check if the row block can be inserted.\n\t\tif ( ! canInsertBlockType( rowBlockName, rowContainerId ) ) {\n\t\t\t// Exit early.\n\t\t\treturn;\n\t\t}\n\n\t\t// Create column blocks.\n\t\tconst columnBlocks = [];\n\n\t\t// Loop through the table columns count attribute.\n\t\tfor ( let i = 0; i < tableBlock.attributes?.columns || 0; i++ ) {\n\t\t\tcolumnBlocks.push(\n\t\t\t\tcreateBlock( columnBlockName, {}, [ createBlock( cellBlockName ) ] ),\n\t\t\t);\n\t\t}\n\n\t\t// Create a new row block.\n\t\tconst newRowBlock = createBlock( rowBlockName, {}, columnBlocks );\n\n\t\t// Insert the new row block.\n\t\tinsertBlock( newRowBlock, tableRow + insertionIndex, rowContainerId );\n\n\t\t// Update the table block attributes.\n\t\tupdateBlockAttributes( tableId, {\n\t\t\trows: tableBlock.attributes?.rows + 1,\n\t\t} );\n\t};\n\n\t/**\n\t * Delete row.\n\t */\n\tconst onDeleteRow = () => {\n\t\t// Get table block.\n\t\tconst tableBlock = getBlock( tableId );\n\n\t\t// Check if the table block exists.\n\t\tif ( ! tableBlock ) {\n\t\t\t// Exit early.\n\t\t\treturn;\n\t\t}\n\n\t\t// Get current row container block.\n\t\tconst rowContainerBlock = getBlock( rowContainerId );\n\n\t\t// Check if the row container block exists.\n\t\tif ( ! rowContainerBlock ) {\n\t\t\t// Exit early.\n\t\t\treturn;\n\t\t}\n\n\t\t// Get current row block.\n\t\tconst currentRowBlock = rowContainerBlock.innerBlocks[ tableRow - 1 ];\n\n\t\t// Check if the current row block is removable.\n\t\tif (\n\t\t\t! currentRowBlock?.clientId ||\n\t\t\t! canRemoveBlock( currentRowBlock.clientId )\n\t\t) {\n\t\t\t// Exit early.\n\t\t\treturn;\n\t\t}\n\n\t\t// Remove the current row block.\n\t\tremoveBlock( currentRowBlock.clientId );\n\n\t\t// Update the table block attributes.\n\t\tupdateBlockAttributes( tableId, {\n\t\t\trows: tableBlock.attributes?.rows - 1,\n\t\t} );\n\t};\n\n\t/**\n\t * Insert column.\n\t *\n\t * @param {0|-1} insertionIndex Insertion index. -1 for before and 0 for after.\n\t */\n\tconst onInsertColumn = ( insertionIndex: 0 | -1 = 0 ) => {\n\t\t// Get table block.\n\t\tconst tableBlock = getBlock( tableId );\n\n\t\t// Check if the table block exists.\n\t\tif ( ! tableBlock ) {\n\t\t\t// Exit early.\n\t\t\treturn;\n\t\t}\n\n\t\t// Get current row container block.\n\t\tconst rowContainerBlock = getBlock( rowContainerId );\n\n\t\t// Check if the row container block exists.\n\t\tif ( ! rowContainerBlock ) {\n\t\t\t// Exit early.\n\t\t\treturn;\n\t\t}\n\n\t\t// Loop through the table row blocks and insert a new column block.\n\t\ttableBlock.innerBlocks.forEach( ( currentRowContainerBlock ) => {\n\t\t\t// Check the name of the row container block.\n\t\t\tif ( currentRowContainerBlock.name !== rowContainerBlockName ) {\n\t\t\t\t// Continue loop.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Loop through the row container blocks.\n\t\t\tcurrentRowContainerBlock.innerBlocks.forEach( ( rowBlock ) => {\n\t\t\t\t// Check the name of the row block.\n\t\t\t\tif ( rowBlock.name !== rowBlockName ) {\n\t\t\t\t\t// Continue loop.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Check if the column block can be inserted.\n\t\t\t\tif ( ! canInsertBlockType( columnBlockName, rowBlock.clientId ) ) {\n\t\t\t\t\t// Continue loop.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Create a new column block.\n\t\t\t\tconst newColumnBlock = createBlock( columnBlockName, {}, [\n\t\t\t\t\tcreateBlock( cellBlockName ),\n\t\t\t\t] );\n\n\t\t\t\t// Insert the new column block.\n\t\t\t\tinsertBlock(\n\t\t\t\t\tnewColumnBlock,\n\t\t\t\t\ttableColumn + insertionIndex,\n\t\t\t\t\trowBlock.clientId,\n\t\t\t\t);\n\t\t\t} );\n\t\t} );\n\n\t\t// Update the table block attributes.\n\t\tupdateBlockAttributes( tableId, {\n\t\t\tcolumns: tableBlock.attributes?.columns + 1,\n\t\t} );\n\t};\n\n\t/**\n\t * Delete column.\n\t */\n\tconst onDeleteColumn = () => {\n\t\t// Get table block.\n\t\tconst tableBlock = getBlock( tableId );\n\n\t\t// Check if the table block exists.\n\t\tif ( ! tableBlock ) {\n\t\t\t// Exit early.\n\t\t\treturn;\n\t\t}\n\n\t\t// Columns to be removed.\n\t\tconst columnsToRemove: string[] = [];\n\n\t\t// Loop through the table row blocks.\n\t\ttableBlock.innerBlocks.forEach( ( currentRowContainerBlock ) => {\n\t\t\t// Check the name of the row container block.\n\t\t\tif ( currentRowContainerBlock.name !== rowContainerBlockName ) {\n\t\t\t\t// Continue loop.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Loop through the row container blocks.\n\t\t\tcurrentRowContainerBlock.innerBlocks.forEach( ( rowBlock ) => {\n\t\t\t\t// Check the name of the row block.\n\t\t\t\tif ( rowBlock.name !== rowBlockName ) {\n\t\t\t\t\t// Continue loop.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Get the current column block.\n\t\t\t\tconst currentColumnBlock = rowBlock.innerBlocks[ tableColumn - 1 ];\n\n\t\t\t\t// Check if the current column block is removable.\n\t\t\t\tif (\n\t\t\t\t\tcurrentColumnBlock?.clientId &&\n\t\t\t\t\tcanRemoveBlock( currentColumnBlock.clientId )\n\t\t\t\t) {\n\t\t\t\t\tcolumnsToRemove.push( currentColumnBlock.clientId );\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\n\t\t// Remove the columns.\n\t\tremoveBlocks( columnsToRemove );\n\n\t\t// Update the table block attributes.\n\t\tupdateBlockAttributes( tableId, {\n\t\t\tcolumns: tableBlock.attributes?.columns - 1,\n\t\t} );\n\t};\n\n\t/**\n\t * Merge column left.\n\t */\n\tconst onMergeColumnLeft = (): void => {\n\t\t// Get table block.\n\t\tconst tableBlock = getBlock( tableId );\n\n\t\t// Check if the table block exists.\n\t\tif ( ! tableBlock ) {\n\t\t\t// Exit early.\n\t\t\treturn;\n\t\t}\n\n\t\t// Get current column block.\n\t\tconst currentBlock = getBlock( columnId );\n\n\t\t// Check if the current column block exists.\n\t\tif ( ! currentBlock ) {\n\t\t\t// Exit early.\n\t\t\treturn;\n\t\t}\n\n\t\t// Get previous block client ID.\n\t\tconst previousBlockClientId = getAdjacentBlockClientId( columnId, -1 );\n\n\t\t// Check if the previous block client ID exists.\n\t\tif ( ! previousBlockClientId ) {\n\t\t\t// Exit early.\n\t\t\treturn;\n\t\t}\n\n\t\t// Previous block.\n\t\tconst previousBlock = getBlock( previousBlockClientId );\n\n\t\t// Check if the previous block exists.\n\t\tif ( ! previousBlock ) {\n\t\t\t// Exit early.\n\t\t\treturn;\n\t\t}\n\n\t\t// Merge columns.\n\t\tmergeColumnsHorizontally( currentBlock, previousBlock );\n\t};\n\n\t/**\n\t * Merge column right.\n\t */\n\tconst onMergeColumnRight = (): void => {\n\t\t// Get table block.\n\t\tconst tableBlock = getBlock( tableId );\n\n\t\t// Check if the table block exists.\n\t\tif ( ! tableBlock ) {\n\t\t\t// Exit early.\n\t\t\treturn;\n\t\t}\n\n\t\t// Get current column block.\n\t\tconst currentBlock = getBlock( columnId );\n\n\t\t// Check if the current column block exists.\n\t\tif ( ! currentBlock ) {\n\t\t\t// Exit early.\n\t\t\treturn;\n\t\t}\n\n\t\t// Get next block client ID.\n\t\tconst nextBlockClientId = getAdjacentBlockClientId( columnId, 1 );\n\n\t\t// Check if the next block client ID exists.\n\t\tif ( ! nextBlockClientId ) {\n\t\t\t// Exit early.\n\t\t\treturn;\n\t\t}\n\n\t\t// Next block.\n\t\tconst nextBlock = getBlock( nextBlockClientId );\n\n\t\t// Check if the next block exists.\n\t\tif ( ! nextBlock ) {\n\t\t\t// Exit early.\n\t\t\treturn;\n\t\t}\n\n\t\t// Merge columns.\n\t\tmergeColumnsHorizontally( nextBlock, currentBlock );\n\t};\n\n\t/**\n\t * Merge column up.\n\t */\n\tconst onMergeColumnUp = (): void => {\n\t\t// Get table block.\n\t\tconst tableBlock = getBlock( tableId );\n\n\t\t// Check if the table block exists.\n\t\tif ( ! tableBlock ) {\n\t\t\t// Exit early.\n\t\t\treturn;\n\t\t}\n\n\t\t// Get current row container block.\n\t\tconst rowContainerBlock = getBlock( rowContainerId );\n\n\t\t// Check if the row container block exists.\n\t\tif ( ! rowContainerBlock ) {\n\t\t\t// Exit early.\n\t\t\treturn;\n\t\t}\n\n\t\t// Prepare variables.\n\t\tlet columnToMergeInto: BlockInstance | undefined;\n\t\tlet columnToMergeFrom: BlockInstance | undefined;\n\n\t\t// Traverse rows.\n\t\ttableBlock.innerBlocks.some( ( currentRowContainerBlock ) => {\n\t\t\t// Check if the row container block is the current row container block.\n\t\t\tif ( currentRowContainerBlock.name !== rowContainerBlockName ) {\n\t\t\t\t// Continue loop.\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Avoid merging thead/tfoot row with tbody row.\n\t\t\tconst currentRowContainerBlockAttributes = getBlockAttributes(\n\t\t\t\tcurrentRowContainerBlock.clientId,\n\t\t\t);\n\n\t\t\t// Check if the row container block attributes are the same.\n\t\t\tif (\n\t\t\t\tcurrentRowContainerBlockAttributes?.type !==\n\t\t\t\trowContainerBlock?.attributes?.type\n\t\t\t) {\n\t\t\t\t// Continue loop.\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Loop through the row container blocks.\n\t\t\treturn currentRowContainerBlock.innerBlocks.some(\n\t\t\t\t( rowBlock, rowIndex ): boolean => {\n\t\t\t\t\t// Get current row.\n\t\t\t\t\tconst rowNumber: number = rowIndex + 1;\n\n\t\t\t\t\t// Check if the row block is the current row block.\n\t\t\t\t\tif (\n\t\t\t\t\t\trowBlock.name !== rowBlockName ||\n\t\t\t\t\t\t( rowNumber !== tableRow && rowNumber !== tableRow - 1 ) ||\n\t\t\t\t\t\t! rowBlock.innerBlocks.length\n\t\t\t\t\t) {\n\t\t\t\t\t\t// Continue loop.\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Traverse columns in current row.\n\t\t\t\t\trowBlock.innerBlocks.some( ( columnBlock, columnIndex ): boolean => {\n\t\t\t\t\t\t// Get column to merge from and into.\n\t\t\t\t\t\tconst columnNumber: number = columnIndex + 1;\n\n\t\t\t\t\t\t// Check if the column block is the current column block.\n\t\t\t\t\t\tif ( columnNumber === tableColumn && rowNumber === tableRow ) {\n\t\t\t\t\t\t\tcolumnToMergeFrom = columnBlock;\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\tcolumnNumber === tableColumn &&\n\t\t\t\t\t\t\trowNumber === tableRow - 1\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tcolumnToMergeInto = columnBlock;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Short circuit if we found them.\n\t\t\t\t\t\tif ( columnToMergeInto && columnToMergeFrom ) {\n\t\t\t\t\t\t\t// Exit early.\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// We haven't found them, loop some more.\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} );\n\n\t\t\t\t\t// Check if we have a \"to\" and \"from\" column.\n\t\t\t\t\tif ( ! columnToMergeFrom || ! columnToMergeInto ) {\n\t\t\t\t\t\t// Exit early.\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Merge columns.\n\t\t\t\t\tmergeColumnsVertically( columnToMergeFrom, columnToMergeInto );\n\n\t\t\t\t\t// Short-circuit loop.\n\t\t\t\t\treturn true;\n\t\t\t\t},\n\t\t\t);\n\t\t} );\n\t};\n\n\t/**\n\t * Merge column down.\n\t */\n\tconst onMergeColumnDown = (): void => {\n\t\t// Get table block.\n\t\tconst tableBlock = getBlock( tableId );\n\n\t\t// Check if the table block exists.\n\t\tif ( ! tableBlock ) {\n\t\t\t// Exit early.\n\t\t\treturn;\n\t\t}\n\n\t\t// Get current row container block.\n\t\tconst rowContainerBlock = getBlock( rowContainerId );\n\n\t\t// Check if the row container block exists.\n\t\tif ( ! rowContainerBlock ) {\n\t\t\t// Exit early.\n\t\t\treturn;\n\t\t}\n\n\t\t// Prepare variables.\n\t\tlet columnToMergeInto: BlockInstance | undefined;\n\t\tlet columnToMergeFrom: BlockInstance | undefined;\n\n\t\t// Traverse rows.\n\t\ttableBlock.innerBlocks.some( ( currentRowContainerBlock ) => {\n\t\t\t// Check if the row container block is the current row container block.\n\t\t\tif ( currentRowContainerBlock.name !== rowContainerBlockName ) {\n\t\t\t\t// Continue loop.\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Avoid merging thead/tfoot row with tbody row.\n\t\t\tconst currentRowContainerBlockAttributes = getBlockAttributes(\n\t\t\t\tcurrentRowContainerBlock.clientId,\n\t\t\t);\n\n\t\t\t// Check if the row container block attributes are the same.\n\t\t\tif (\n\t\t\t\tcurrentRowContainerBlockAttributes?.type !==\n\t\t\t\trowContainerBlock?.attributes?.type\n\t\t\t) {\n\t\t\t\t// Continue loop.\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Loop through the row container blocks.\n\t\t\treturn currentRowContainerBlock.innerBlocks.some(\n\t\t\t\t( rowBlock, rowIndex ): boolean => {\n\t\t\t\t\t// Get current row.\n\t\t\t\t\tconst rowNumber: number = rowIndex + 1;\n\n\t\t\t\t\t// Check if the row block is the current row block.\n\t\t\t\t\tif (\n\t\t\t\t\t\trowBlock.name !== rowBlockName ||\n\t\t\t\t\t\t( rowNumber !== tableRow && rowNumber !== tableRow + 1 ) ||\n\t\t\t\t\t\t! rowBlock.innerBlocks.length\n\t\t\t\t\t) {\n\t\t\t\t\t\t// Continue loop.\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Traverse columns in current row.\n\t\t\t\t\trowBlock.innerBlocks.some( ( columnBlock, columnIndex ): boolean => {\n\t\t\t\t\t\t// Get column to merge from and into.\n\t\t\t\t\t\tconst columnNumber: number = columnIndex + 1;\n\n\t\t\t\t\t\t// Check if the column block is the current column block.\n\t\t\t\t\t\tif ( columnNumber === tableColumn && rowNumber === tableRow ) {\n\t\t\t\t\t\t\tcolumnToMergeInto = columnBlock;\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\tcolumnNumber === tableColumn &&\n\t\t\t\t\t\t\trowNumber === tableRow + 1\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tcolumnToMergeFrom = columnBlock;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Short circuit if we found them.\n\t\t\t\t\t\tif ( columnToMergeInto && columnToMergeFrom ) {\n\t\t\t\t\t\t\t// Exit early.\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// We haven't found them, loop some more.\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} );\n\n\t\t\t\t\t// Check if we have a \"to\" and \"from\" column.\n\t\t\t\t\tif ( ! columnToMergeFrom || ! columnToMergeInto ) {\n\t\t\t\t\t\t// Exit early.\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Merge columns.\n\t\t\t\t\tmergeColumnsVertically( columnToMergeFrom, columnToMergeInto );\n\n\t\t\t\t\t// Short-circuit loop.\n\t\t\t\t\treturn true;\n\t\t\t\t},\n\t\t\t);\n\t\t} );\n\t};\n\n\t/**\n\t * Merge columns horizontally.\n\t *\n\t * @param {Object} fromColumn From column block instance.\n\t * @param {Object} toColumn   To column block instance.\n\t */\n\tconst mergeColumnsHorizontally = (\n\t\tfromColumn: BlockInstance,\n\t\ttoColumn: BlockInstance,\n\t): void => {\n\t\t// Get colspans.\n\t\tconst mergeIntoAttributes = getBlockAttributes( toColumn.clientId );\n\t\tconst mergeFromAttributes = getBlockAttributes( fromColumn.clientId );\n\n\t\t// Get rowspans.\n\t\tconst mergeIntoRowspan: number = parseInt(\n\t\t\tmergeIntoAttributes?.rowSpan ?? 1,\n\t\t);\n\t\tconst mergeFromRowspan: number = parseInt(\n\t\t\tmergeFromAttributes?.rowSpan ?? 1,\n\t\t);\n\n\t\t// Invalid merge.\n\t\tif ( mergeIntoRowspan !== mergeFromRowspan ) {\n\t\t\t// Exit early.\n\t\t\treturn;\n\t\t}\n\n\t\t// Get colspans.\n\t\tconst mergeIntoColspan: number = parseInt(\n\t\t\tmergeIntoAttributes?.colSpan ?? 1,\n\t\t);\n\t\tconst mergeFromColspan: number = parseInt(\n\t\t\tmergeFromAttributes?.colSpan ?? 1,\n\t\t);\n\n\t\t// Update colspan.\n\t\tupdateBlockAttributes( toColumn.clientId, {\n\t\t\tcolSpan: mergeIntoColspan + mergeFromColspan,\n\t\t} );\n\n\t\t// If it is the current column, move children to previous column and delete current column.\n\t\tmoveBlocksToPosition(\n\t\t\tfromColumn.innerBlocks.map( ( block ) => block.clientId ),\n\t\t\tfromColumn.clientId,\n\t\t\ttoColumn.clientId,\n\t\t);\n\n\t\t// Remove block that is being merged from.\n\t\tremoveBlock( fromColumn.clientId );\n\t};\n\n\t/**\n\t * Merge columns vertically.\n\t *\n\t * @param {Object} fromColumn From column block instance.\n\t * @param {Object} toColumn   To column block instance.\n\t */\n\tconst mergeColumnsVertically = (\n\t\tfromColumn: BlockInstance,\n\t\ttoColumn: BlockInstance,\n\t): void => {\n\t\t// Get rowspans.\n\t\tconst mergeIntoAttributes = getBlockAttributes( toColumn.clientId );\n\t\tconst mergeFromAttributes = getBlockAttributes( fromColumn.clientId );\n\n\t\t// Get colspans.\n\t\tconst mergeIntoColspan: number = parseInt(\n\t\t\tmergeIntoAttributes?.colSpan ?? 1,\n\t\t);\n\t\tconst mergeFromColspan: number = parseInt(\n\t\t\tmergeFromAttributes?.colSpan ?? 1,\n\t\t);\n\n\t\t// Invalid merge.\n\t\tif ( mergeIntoColspan !== mergeFromColspan ) {\n\t\t\t// Exit early.\n\t\t\treturn;\n\t\t}\n\n\t\t// Get rowspans.\n\t\tconst mergeIntoRowspan: number = parseInt(\n\t\t\tmergeIntoAttributes?.rowSpan ?? 1,\n\t\t);\n\t\tconst mergeFromRowspan: number = parseInt(\n\t\t\tmergeFromAttributes?.rowSpan ?? 1,\n\t\t);\n\n\t\t// Update rowspan.\n\t\tupdateBlockAttributes( toColumn.clientId, {\n\t\t\trowSpan: mergeIntoRowspan + mergeFromRowspan,\n\t\t} );\n\n\t\t// If it is the current column, move children to previous column and delete current column.\n\t\tmoveBlocksToPosition(\n\t\t\tfromColumn.innerBlocks.map( ( block ) => block.clientId ),\n\t\t\tfromColumn.clientId,\n\t\t\ttoColumn.clientId,\n\t\t);\n\n\t\t// Remove block that is being merged from.\n\t\tremoveBlock( fromColumn.clientId );\n\t};\n\n\t/**\n\t * Table controls.\n\t */\n\tconst tableControls = [\n\t\t{\n\t\t\ticon: tableRowBefore,\n\t\t\ttitle: __( 'Insert row before', 'tp' ),\n\t\t\tisDisabled:\n\t\t\t\t! isSelected ||\n\t\t\t\trowContainerBlockType === 'tfoot' ||\n\t\t\t\trowContainerBlockType === 'thead',\n\t\t\tonClick: () => onInsertRow( -1 ),\n\t\t},\n\t\t{\n\t\t\ticon: tableRowAfter,\n\t\t\ttitle: __( 'Insert row after', 'tp' ),\n\t\t\tisDisabled:\n\t\t\t\t! isSelected ||\n\t\t\t\trowContainerBlockType === 'tfoot' ||\n\t\t\t\trowContainerBlockType === 'thead',\n\t\t\tonClick: onInsertRow,\n\t\t},\n\t\t{\n\t\t\ticon: tableRowDelete,\n\t\t\ttitle: __( 'Delete row', 'tp' ),\n\t\t\tisDisabled:\n\t\t\t\t! isSelected ||\n\t\t\t\trowContainerBlockType === 'tfoot' ||\n\t\t\t\trowContainerBlockType === 'thead',\n\t\t\tonClick: onDeleteRow,\n\t\t},\n\t\t{\n\t\t\ticon: tableColumnBefore,\n\t\t\ttitle: __( 'Insert column before', 'tp' ),\n\t\t\tisDisabled: ! isSelected,\n\t\t\tonClick: () => onInsertColumn( -1 ),\n\t\t},\n\t\t{\n\t\t\ticon: tableColumnAfter,\n\t\t\ttitle: __( 'Insert column after', 'tp' ),\n\t\t\tisDisabled: ! isSelected,\n\t\t\tonClick: onInsertColumn,\n\t\t},\n\t\t{\n\t\t\ticon: tableColumnDelete,\n\t\t\ttitle: __( 'Delete column', 'tp' ),\n\t\t\tisDisabled: ! isSelected,\n\t\t\tonClick: onDeleteColumn,\n\t\t},\n\t\t{\n\t\t\ticon: arrowLeft,\n\t\t\ttitle: __( 'Merge column left', 'tp' ),\n\t\t\tisDisabled: tableColumn < 2,\n\t\t\tonClick: onMergeColumnLeft,\n\t\t},\n\t\t{\n\t\t\ticon: arrowRight,\n\t\t\ttitle: __( 'Merge column right', 'tp' ),\n\t\t\tisDisabled: tableColumn === maximumColumnsInCurrentRow,\n\t\t\tonClick: onMergeColumnRight,\n\t\t},\n\t\t{\n\t\t\ticon: arrowUp,\n\t\t\ttitle: __( 'Merge column up', 'tp' ),\n\t\t\tisDisabled:\n\t\t\t\ttableRow < 2 ||\n\t\t\t\trowContainerBlockType === 'tfoot' ||\n\t\t\t\trowContainerBlockType === 'thead',\n\t\t\tonClick: onMergeColumnUp,\n\t\t},\n\t\t{\n\t\t\ticon: arrowDown,\n\t\t\ttitle: __( 'Merge column down', 'tp' ),\n\t\t\tisDisabled:\n\t\t\t\ttableRow === maximumRowsInCurrentColumn ||\n\t\t\t\trowContainerBlockType === 'tfoot' ||\n\t\t\t\trowContainerBlockType === 'thead',\n\t\t\tonClick: onMergeColumnDown,\n\t\t},\n\t] as DropdownOption[];\n\n\t/**\n\t * Return block controls.\n\t */\n\treturn (\n\t\t<>\n\t\t\t{ /* @ts-ignore - Group is not defined in the prop-type. */ }\n\t\t\t<BlockControls group=\"other\">\n\t\t\t\t<ToolbarDropdownMenu\n\t\t\t\t\ticon={ table }\n\t\t\t\t\tlabel={ __( 'Edit table', 'tp' ) }\n\t\t\t\t\tcontrols={ tableControls }\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\t\t</>\n\t);\n}\n","/**\n * WordPress dependencies.\n */\nimport { __ } from '@wordpress/i18n';\nimport { BlockConfiguration, BlockEditProps } from '@wordpress/blocks';\nimport { addFilter } from '@wordpress/hooks';\n\n/**\n * Internal dependencies.\n */\nimport Toolbar from './toolbar';\n\n/**\n * Add context of table row and column to the block.\n */\naddFilter(\n\t'blocks.registerBlockType',\n\t'travelopia/table-row-column-context',\n\t( settings: BlockConfiguration ) => {\n\t\t// Contexts required for the block.\n\t\tconst requiredContexts = [\n\t\t\t'travelopia/table-row',\n\t\t\t'travelopia/table-column',\n\t\t\t'travelopia/table-id',\n\t\t\t'travelopia/table-row-container-id',\n\t\t\t'travelopia/table-column-id',\n\t\t];\n\n\t\t// Add context to the block.\n\t\tif ( settings.usesContext && Array.isArray( settings.usesContext ) ) {\n\t\t\trequiredContexts.forEach( ( context ) => {\n\t\t\t\t// Check if the context is already added.\n\t\t\t\tif ( ! settings.usesContext?.includes( context ) ) {\n\t\t\t\t\tsettings.usesContext?.push( context );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Add context to the block.\n\t\treturn settings;\n\t},\n);\n\n/**\n * Add toolbar to the table block.\n */\naddFilter( 'editor.BlockEdit', 'travelopia/table-toolbar', ( BlockEdit ) => {\n\t// Return the block edit component.\n\treturn ( props: BlockEditProps<any> ) => {\n\t\t// Get the block context and isSelected prop.\n\t\tconst { context, isSelected } = props;\n\n\t\t// Check if the block has context.\n\t\tif ( ! context ) {\n\t\t\t// Return the block edit component.\n\t\t\treturn <BlockEdit { ...props } />;\n\t\t}\n\n\t\t// Get the table row and column from the block context.\n\t\tconst tableRow = context[ 'travelopia/table-row' ] as number;\n\t\tconst tableColumn = context[ 'travelopia/table-column' ] as number;\n\t\tconst tableId = context[ 'travelopia/table-id' ] as string;\n\t\tconst tableRowContainerId = context[ 'travelopia/table-row-container-id' ] as string;\n\t\tconst tableColumnId = context[ 'travelopia/table-column-id' ] as string;\n\n\t\t// Check if the table row and column are valid.\n\t\tif (\n\t\t\t! tableRow ||\n\t\t\t! tableColumn ||\n\t\t\t! tableId ||\n\t\t\ttableColumn < 1 ||\n\t\t\ttableRow < 1\n\t\t) {\n\t\t\t// Return the block edit component.\n\t\t\treturn <BlockEdit { ...props } />;\n\t\t}\n\n\t\t// Return the block edit component with toolbar.\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Toolbar\n\t\t\t\t\tisSelected={ isSelected }\n\t\t\t\t\ttableRow={ tableRow }\n\t\t\t\t\ttableColumn={ tableColumn }\n\t\t\t\t\ttableId={ tableId }\n\t\t\t\t\trowContainerId={ tableRowContainerId }\n\t\t\t\t\tcolumnId={ tableColumnId }\n\t\t\t\t/>\n\t\t\t\t<BlockEdit { ...props } />\n\t\t\t</>\n\t\t);\n\t};\n} );\n","/**\n * Import blocks.\n */\nimport * as table from './table';\n\n/**\n * Add blocks.\n */\nconst blocks = [\n\ttable,\n];\n\n/**\n * Register blocks.\n */\nblocks.forEach( ( { init } ) => init() );\n\n/**\n * Add block toolbar.\n */\nimport './block-toolbar';\n"],"names":["f","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","props","_owner","current","exports","Fragment","jsx","jsxs","module","window","hasOwn","classNames","classes","i","arguments","length","arg","appendClass","parseValue","Array","isArray","apply","toString","includes","value","newClass","default","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","getter","__esModule","definition","o","defineProperty","enumerable","get","obj","prop","r","toStringTag","createElement","SVG","viewBox","xmlns","Path","TablePlaceholder","setAttributes","clientId","rows","setRows","useState","columns","setColumns","Placeholder","label","__","icon","BlockIcon","showColors","instructions","className","onSubmit","preventDefault","createAndInsertRowContainer","TextControl","onChange","totalColumns","parseInt","min","totalRows","Button","variant","name","settings","edit","attributes","blockProps","useBlockProps","RichText","tagName","placeholder","content","save","Content","context","isSticky","rowContainerType","innerBlocksProps","useInnerBlocksProps","colSpan","rowSpan","template","templateLock","row","column","useSelect","select","columnIndex","getBlockIndex","rowClientId","getBlockRootClientId","useEffect","blockId","Tag","InspectorControls","PanelBody","title","ToggleControl","checked","help","InnerBlocks","allowedBlocks","tableClientId","tableBlock","getBlock","rowContainerBlock","createBlock","columnBlocks","j","push","innerBlocks","dispatch","replaceInnerBlocks","position","insertBlock","deleteRowContainer","forEach","innerBlock","removeBlock","renderAppender","hasThead","hasTfoot","init","registerBlockType","Toolbar","isSelected","tableId","tableRow","tableColumn","rowContainerId","columnId","canInsertBlockType","getBlockAttributes","getAdjacentBlockClientId","canRemoveBlock","removeBlocks","updateBlockAttributes","moveBlocksToPosition","maximumColumnsInCurrentRow","setMaximumColumnsInCurrentRow","maximumRowsInCurrentColumn","setMaximumRowsInCurrentColumn","rowContainerBlockType","useMemo","some","maxRows","rowBlock","rowIndex","columnBlock","onInsertRow","insertionIndex","newRowBlock","onInsertColumn","currentRowContainerBlock","newColumnBlock","mergeColumnsHorizontally","fromColumn","toColumn","mergeIntoAttributes","mergeFromAttributes","mergeIntoColspan","mergeFromColspan","map","block","mergeColumnsVertically","mergeIntoRowspan","mergeFromRowspan","tableControls","isDisabled","onClick","currentRowBlock","columnsToRemove","currentColumnBlock","currentBlock","previousBlockClientId","previousBlock","nextBlockClientId","nextBlock","columnToMergeInto","columnToMergeFrom","currentRowContainerBlockAttributes","rowNumber","columnNumber","BlockControls","group","ToolbarDropdownMenu","controls","addFilter","requiredContexts","usesContext","BlockEdit","tableRowContainerId","tableColumnId"],"sourceRoot":""}